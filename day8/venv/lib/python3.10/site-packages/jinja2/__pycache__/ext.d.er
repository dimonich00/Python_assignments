##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/jinja2/ext.py 1736025949 31875

.pprint = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.re = pyimport "<failure>"


.t = pyimport "<failure>"


.___v_desugar_1 = pyimport "__init__"
.__init__ = pyimport "__init__"
.Markup: {markupsafe.Markup}
.___v_desugar_2 = pyimport "__init__"

.defaults: Never
.___v_desugar_3 = pyimport "__init__"

.nodes: Never
.___v_desugar_4 = pyimport "environment"
.environment = pyimport "environment"
.Environment: Never
.___v_desugar_5 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.TemplateAssertionError: {exceptions.TemplateAssertionError}
.___v_desugar_6 = pyimport "exceptions"

.TemplateSyntaxError: {exceptions.TemplateSyntaxError}
.___v_desugar_7 = pyimport "runtime"
.runtime = pyimport "runtime"
.concat: Never
.___v_desugar_8 = pyimport "runtime"

.Context: Never
.___v_desugar_9 = pyimport "runtime"

.Undefined: {runtime.Undefined}
.___v_desugar_10 = pyimport "utils"
.utils = pyimport "utils"
.import_string: (import_name: Str, silent: Bool := Bool and Bool) -> Never
.___v_desugar_11 = pyimport "utils"

.pass_context: (f: Obj) -> Never

.GETTEXT_FUNCTIONS: {Type_v_global_44540: global::Tuple([Str, Str, Str, Str, Str]) | Type_v_global_44540 == ("_", "gettext", "ngettext", "pgettext", "npgettext")}
._ws_re: Never
.Extension: ClassType
.Extension.environment: Never
.Extension.identifier: Never
.Extension.__call__: (environment: Obj) -> ext.Extension
.Extension.__init_subclass__: |Type_57806: Type, Type_57652 <: Structural({.__name__ = ?57809; .identifier = ?O; .__module__ = ?57806}), Type_57809: Type, O: Type|(cls: Type_57652) -> NoneType
.Extension.tags: Never
.Extension.priority: {100}
.Extension.bind: (self: ext.Extension, environment: Obj) -> Never
.Extension.preprocess: (self: ext.Extension, source: Str, name: Obj, filename: Obj := Obj) -> Str
.Extension.filter_stream: (self: ext.Extension, stream: lexer.TokenStream) -> lexer.TokenStream
.Extension.parse: (self: ext.Extension, parser: Obj) -> Never
.Extension.attr: (self: ext.Extension, name: Str, lineno: Obj := Obj) -> Never
.Extension.call_method: (self: ext.Extension, name: Str, args: Obj := Obj, kwargs: Obj := Obj, dyn_args: Obj := Obj, dyn_kwargs: Obj := Obj, lineno: Obj := Obj) -> Never

._gettext_alias: (__context: Obj, *args: Obj, **kwargs := Obj) -> Never
._make_new_gettext: (func: Obj) -> (__context: Never, __string: Str, **variables := Never) -> Str
._make_new_ngettext: (func: Obj) -> (__context: Never, __singular: Str, __plural: Str, __num: Int, **variables := Never) -> Str
._make_new_pgettext: (func: Obj) -> (__context: Never, __string_ctx: Str, __string: Str, **variables := Never) -> Str
._make_new_npgettext: (func: Obj) -> (__context: Never, __string_ctx: Str, __singular: Str, __plural: Str, __num: Int, **variables := Never) -> Str
.InternationalizationExtension: ClassType
ext = pyimport "ext"
.InternationalizationExtension <: .Extension
.InternationalizationExtension.__call__: (environment: Obj) -> ext.InternationalizationExtension
.InternationalizationExtension.tags: global::Set({"trans"}, 1)
.InternationalizationExtension._install: (self: ext.InternationalizationExtension, translations: Obj, newstyle: Obj := Obj) -> NoneType
.InternationalizationExtension._install_null: (self: ext.InternationalizationExtension, newstyle: Obj := Obj) -> NoneType
.InternationalizationExtension._install_callables: (self: ext.InternationalizationExtension, gettext: Obj, ngettext: Obj, newstyle: Obj := Obj, pgettext: Obj := Obj, npgettext: Obj := Obj) -> NoneType
.InternationalizationExtension._uninstall: (self: ext.InternationalizationExtension, translations: Obj) -> NoneType
.InternationalizationExtension._extract: (self: ext.InternationalizationExtension, source: Obj, gettext_functions: Structural({.__contains__ = (self: Never, Obj) -> Bool}) := Structural({.__contains__ = (self: Never, Obj) -> Bool})) -> NoneType
.InternationalizationExtension.parse: (self: ext.InternationalizationExtension, parser: Obj) -> Never
.InternationalizationExtension._trim_whitespace: |Type_57712: Type|(self: ext.InternationalizationExtension, string: Str, _ws_re: Type_57712 := Type_57712 and Type_57712) -> Str
.InternationalizationExtension._parse_block: (self: ext.InternationalizationExtension, parser: Obj, allow_pluralize: Bool) -> global::Tuple([global::List!(Never, 1), Never])
.InternationalizationExtension._make_node: |Type_57719 <: Structural({.items = (self: Obj) -> ?58476}), Type_58476: Type|(self: ext.InternationalizationExtension, singular: Str, plural: Never, context: Obj, variables: Type_57719, plural_expr: Obj, vars_referenced: Bool, num_called_num: Bool) -> Never

.ExprStmtExtension: ClassType
.ExprStmtExtension <: .Extension
.ExprStmtExtension.tags: global::Set({"do"}, 1)
.ExprStmtExtension.parse: (self: ext.ExprStmtExtension, parser: Obj) -> Never

.LoopControlExtension: ClassType
.LoopControlExtension <: .Extension
.LoopControlExtension.tags: global::Set({"continue", "break"}, 2)
.LoopControlExtension.parse: (self: ext.LoopControlExtension, parser: Obj) -> Never

.DebugExtension: ClassType
.DebugExtension <: .Extension
.DebugExtension.tags: global::Set({"debug"}, 1)
.DebugExtension.parse: (self: ext.DebugExtension, parser: Obj) -> Never
.DebugExtension._render: (self: ext.DebugExtension, context: Obj) -> Str

.extract_from_ast: (ast: Obj, gettext_functions: Structural({.__contains__ = (self: Never, Obj) -> Bool}) := {Type_v_global_44540: global::Tuple([Str, Str, Str, Str, Str]) | Type_v_global_44540 == ("_", "gettext", "ngettext", "pgettext", "npgettext")} and Structural({.__contains__ = (self: Never, Obj) -> Bool}), babel_style: Bool := {True} and Bool) -> NoneType
.Type__CommentFinder: ClassType
.Type__CommentFinder.comment_tags: Never
.Type__CommentFinder.offset: Never
.Type__CommentFinder.last_lineno: Never
.Type__CommentFinder.tokens: Never
.Type__CommentFinder.__call__: (tokens: Obj, comment_tags: Obj) -> ext.Type__CommentFinder
.Type__CommentFinder.find_backwards: (self: ext.Type__CommentFinder, offset: Int) -> Never
.Type__CommentFinder.find_comments: (self: ext.Type__CommentFinder, lineno: Int) -> Never

.babel_extract: |Type_57740 <: Structural({.__contains__ = (self: Never, ?R) -> Bool and (self: Never, ?R) -> Bool}), R: Type|(fileobj: Obj, keywords: Type_57740, comment_tags: Obj, options: global::Indexable(Obj, Never) or global::List(Never, _: Nat) or global::GenericDict) -> NoneType
.i18n: {ext.InternationalizationExtension}
.do: {ext.ExprStmtExtension}
.loopcontrols: {ext.LoopControlExtension}
.debug: {ext.DebugExtension}
