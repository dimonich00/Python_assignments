##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/markupsafe/__init__.py 1736025949 13214
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.cabc = pyimport "<failure>"


.string = pyimport "<failure>"


.t = pyimport "<failure>"


.___v_desugar_2 = pyimport "<failure>"

._escape_inner: Never
.___v_desugar_3 = pyimport "_native"
._native = pyimport "_native"
._escape_inner: (s: Str) -> Str


.Type__HasHTML: ClassType
.Type__HasHTML <: Never
.Type__HasHTML.__html__: (self: markupsafe.Type__HasHTML) -> Str

.Type__TPEscape: ClassType
.Type__TPEscape <: Never
.Type__TPEscape.__call__: (self: markupsafe.Type__TPEscape, s: Obj) -> Never

.escape: (s: Obj) -> Never
.escape_silent: (s: Obj) -> Never
.soft_str: (s: Obj) -> Str
.Markup: ClassType
.Markup <: Str
.Markup.__slots__: global::Tuple([])
.Markup.__new__: (cls: Obj, Obj: Obj := Obj, encoding: NoneType or Str := NoneType or Str, errors: Str := Str) -> Never
.Markup.__html__: (self: markupsafe.Markup) -> Never
.Markup.__add__: (self: markupsafe.Markup, value: Obj) -> Never
.Markup.__radd__: (self: markupsafe.Markup, value: Obj) -> Never
.Markup.__mul__: (self: markupsafe.Markup, value: Obj) -> Never
.Markup.__rmul__: (self: markupsafe.Markup, value: Obj) -> Never
.Markup.__mod__: (self: markupsafe.Markup, value: Obj) -> Never
.Markup.__repr__: (self: markupsafe.Markup) -> Str
.Markup.join: (self: markupsafe.Markup, iterable: global::Iterable(Never)) -> Never
.Markup.split: Never
.Markup.rsplit: Never
.Markup.splitlines: Never
.Markup.unescape: (self: markupsafe.Markup) -> Str
.Markup.striptags: (self: markupsafe.Markup) -> Str
.Markup.escape: (cls: Str or Structural({.__html__ = Obj}), s: Obj) -> Never
.Markup.__getitem__: (self: markupsafe.Markup, key: Obj) -> Never
.Markup.capitalize: (self: markupsafe.Markup) -> Never
.Markup.title: (self: markupsafe.Markup) -> Never
.Markup.lower: (self: markupsafe.Markup) -> Never
.Markup.upper: (self: markupsafe.Markup) -> Never
.Markup.replace: (self: markupsafe.Markup, old: Str, new: Str, count: Obj := Obj) -> Never
.Markup.ljust: (self: markupsafe.Markup, width: Obj, fillchar: Str := Str) -> Never
.Markup.rjust: (self: markupsafe.Markup, width: Obj, fillchar: Str := Str) -> Never
.Markup.lstrip: (self: markupsafe.Markup, chars: NoneType or Str := NoneType or Str) -> Never
.Markup.rstrip: (self: markupsafe.Markup, chars: NoneType or Str := NoneType or Str) -> Never
.Markup.center: (self: markupsafe.Markup, width: Obj, fillchar: Str := Str) -> Never
.Markup.strip: (self: markupsafe.Markup, chars: NoneType or Str := NoneType or Str) -> Never
.Markup.translate: (self: markupsafe.Markup, table: Obj) -> Str
.Markup.expandtabs: (self: markupsafe.Markup, tabsize: Obj := Obj) -> Never
.Markup.swapcase: (self: markupsafe.Markup) -> Never
.Markup.zfill: (self: markupsafe.Markup, width: Obj) -> Never
.Markup.casefold: (self: markupsafe.Markup) -> Never
.Markup.removeprefix: (self: markupsafe.Markup, prefix: Str) -> Never
.Markup.removesuffix: (self: markupsafe.Markup, suffix: Str) -> Never
.Markup.partition: (self: markupsafe.Markup, sep: Str) -> global::Tuple([Never, Never, Never])
.Markup.rpartition: (self: markupsafe.Markup, sep: Str) -> global::Tuple([Never, Never, Never])
.Markup.format: (self: markupsafe.Markup, *args: Obj, **kwargs := Obj) -> Never
.Markup.format_map: (self: markupsafe.Markup, mapping: Obj) -> Never
.Markup.__html_format__: (self: markupsafe.Markup, format_spec: Str) -> Never

.EscapeFormatter: ClassType
.EscapeFormatter <: Never
.EscapeFormatter.escape: Never
.EscapeFormatter.__call__: (escape: Obj) -> markupsafe.EscapeFormatter
.EscapeFormatter.__slots__: global::Tuple([{"escape"}])
.EscapeFormatter.format_field: (self: markupsafe.EscapeFormatter, value: Obj, format_spec: Str) -> Str

._MarkupEscapeHelper: ClassType

.__getattr__: (name: Str) -> Never
