##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/itsdangerous/signer.py 1736025949 9647
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.cabc = pyimport "<failure>"


.hashlib = pyimport "<failure>"


.hmac = pyimport "<failure>"


.t = pyimport "<failure>"


.___v_desugar_2 = pyimport "encoding"
.encoding = pyimport "encoding"
._base64_alphabet: global::Bytes
.___v_desugar_3 = pyimport "encoding"

.base64_decode: (string: global::Bytes or Str) -> global::Bytes
.___v_desugar_4 = pyimport "encoding"

.base64_encode: (string: global::Bytes or Str) -> global::Bytes
.___v_desugar_5 = pyimport "encoding"

.want_bytes: (s: global::Bytes or Str, encoding: Str := Str, errors: Str := Str) -> global::Bytes
.___v_desugar_6 = pyimport "exc"
.exc = pyimport "exc"
.BadSignature: {exc.BadSignature}
.SigningAlgorithm: ClassType
.SigningAlgorithm.__call__: () -> signer.SigningAlgorithm
.SigningAlgorithm.get_signature: (self: signer.SigningAlgorithm, key: global::Bytes, value: global::Bytes) -> global::Bytes
.SigningAlgorithm.verify_signature: (self: signer.SigningAlgorithm, key: global::Bytes, value: global::Bytes, sig: global::Bytes) -> Bool

.NoneAlgorithm: ClassType
signer = pyimport "signer"
.NoneAlgorithm <: .SigningAlgorithm
.NoneAlgorithm.get_signature: (self: signer.NoneAlgorithm, key: global::Bytes, value: global::Bytes) -> global::Bytes

._lazy_sha1: (string: global::Bytes := global::Bytes) -> Never
.HMACAlgorithm: ClassType
.HMACAlgorithm <: .SigningAlgorithm
.HMACAlgorithm.digest_method: Never
.HMACAlgorithm.__call__: (digest_method: Obj := Obj) -> signer.HMACAlgorithm
.HMACAlgorithm.default_digest_method: Never
.HMACAlgorithm.get_signature: (self: signer.HMACAlgorithm, key: global::Bytes, value: global::Bytes) -> global::Bytes

._make_keys_list: (secret_key: global::Bytes or Str) -> global::List!(global::Bytes, _: Nat)
.Signer: ClassType
.Signer.secret_keys: global::List!(global::Bytes, _: Nat)
.Signer.salt: NoneType or global::Bytes or Str
.Signer.digest_method: Never
.Signer.algorithm: NoneType or signer.SigningAlgorithm
.Signer.sep: global::Bytes or Str
.Signer.key_derivation: NoneType or Str
.Signer.__call__: (secret_key: global::Bytes or Str, salt: NoneType or global::Bytes or Str := NoneType or global::Bytes or Str, sep: global::Bytes or Str := global::Bytes or Str, key_derivation: NoneType or Str := NoneType or Str, digest_method: Obj := Obj, algorithm: NoneType or signer.SigningAlgorithm := NoneType or signer.SigningAlgorithm) -> signer.Signer
.Signer.default_digest_method: Never
.Signer.default_key_derivation: Str
.Signer.secret_key: (self: signer.Signer) -> global::Bytes
.Signer.derive_key: (self: signer.Signer, secret_key: NoneType or global::Bytes or Str := NoneType or global::Bytes or Str) -> global::Bytes
.Signer.get_signature: (self: signer.Signer, value: global::Bytes or Str) -> global::Bytes
.Signer.sign: (self: signer.Signer, value: global::Bytes or Str) -> global::Bytes
.Signer.verify_signature: (self: signer.Signer, value: global::Bytes or Str, sig: global::Bytes or Str) -> Bool
.Signer.unsign: (self: signer.Signer, signed_value: global::Bytes or Str) -> global::Bytes
.Signer.validate: (self: signer.Signer, signed_value: global::Bytes or Str) -> Bool

