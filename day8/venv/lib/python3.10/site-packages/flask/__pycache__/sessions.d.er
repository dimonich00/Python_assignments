##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/flask/sessions.py 1736025949 15430
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.c = pyimport "<failure>"


.hashlib = pyimport "<failure>"


.t = pyimport "typing"
.typing = pyimport "typing"

.___v_desugar_2 = pyimport "<failure>"

.Mapping!: Never
.___v_desugar_3 = pyimport "<failure>"

.datetime: Never
.___v_desugar_4 = pyimport "<failure>"

.timezone: Never
.___v_desugar_5 = pyimport "__init__"
.__init__ = pyimport "__init__"
.BadSignature: {exc.BadSignature}
.___v_desugar_6 = pyimport "__init__"

.URLSafeTimedSerializer: {url_safe.URLSafeTimedSerializer}
.___v_desugar_7 = pyimport "__init__"

.CallbackDict: Never
.___v_desugar_8 = pyimport "tag"
.tag = pyimport "tag"
.TaggedJSONSerializer: {json.tag.TaggedJSONSerializer}

.SessionMixin: ClassType
.SessionMixin <: Never
.SessionMixin.permanent: (self: sessions.SessionMixin) -> Bool
.SessionMixin.permanent: (self: sessions.SessionMixin, value: Bool) -> NoneType
.SessionMixin.new: {False}
.SessionMixin.modified: {True}
.SessionMixin.accessed: {True}

.SecureCookieSession: ClassType
.SecureCookieSession <: Never
.SecureCookieSession.__call__: (initial: Obj := Obj) -> sessions.SecureCookieSession
.SecureCookieSession.modified: {False}
.SecureCookieSession.accessed: {False}
.SecureCookieSession.__getitem__: (self: sessions.SecureCookieSession, key: Str) -> Never
.SecureCookieSession.get: (self: sessions.SecureCookieSession, key: Str, default: Obj := Obj) -> Never
.SecureCookieSession.setdefault: (self: sessions.SecureCookieSession, key: Str, default: Obj := Obj) -> Never

.NullSession: ClassType
sessions = pyimport "sessions"
.NullSession <: .SecureCookieSession
.NullSession._fail: (self: sessions.NullSession, *args: Obj, **kwargs := Obj) -> Never

.SessionInterface: ClassType
.SessionInterface.__call__: () -> sessions.SessionInterface
.SessionInterface.null_session_class: {sessions.NullSession}
.SessionInterface.pickle_based: {False}
.SessionInterface.make_null_session: (self: sessions.SessionInterface, app: app.Flask) -> sessions.NullSession
.SessionInterface.is_null_session: (self: sessions.SessionInterface, obj: Obj) -> Bool
.SessionInterface.get_cookie_name: (self: sessions.SessionInterface, app: app.Flask) -> Str
.SessionInterface.get_cookie_domain: (self: sessions.SessionInterface, app: app.Flask) -> NoneType or Str
.SessionInterface.get_cookie_path: (self: sessions.SessionInterface, app: app.Flask) -> Str
.SessionInterface.get_cookie_httponly: (self: sessions.SessionInterface, app: app.Flask) -> Bool
.SessionInterface.get_cookie_secure: (self: sessions.SessionInterface, app: app.Flask) -> Bool
.SessionInterface.get_cookie_samesite: (self: sessions.SessionInterface, app: app.Flask) -> NoneType or Str
.SessionInterface.get_cookie_partitioned: (self: sessions.SessionInterface, app: app.Flask) -> Bool
.SessionInterface.get_expiration_time: (self: sessions.SessionInterface, app: app.Flask, session: sessions.SessionMixin) -> Never
.SessionInterface.should_set_cookie: (self: sessions.SessionInterface, app: app.Flask, session: sessions.SessionMixin) -> Bool
.SessionInterface.open_session: (self: sessions.SessionInterface, app: app.Flask, request: Obj) -> sessions.SessionMixin or NoneType
.SessionInterface.save_session: (self: sessions.SessionInterface, app: app.Flask, session: sessions.SessionMixin, response: Obj) -> NoneType

json = pyimport "json"
.session_json_serializer: json.tag.TaggedJSONSerializer
._lazy_sha1: (string: global::Bytes := global::Bytes) -> Never
.SecureCookieSessionInterface: ClassType
.SecureCookieSessionInterface <: .SessionInterface
.SecureCookieSessionInterface.salt: {"cookie-session"}
.SecureCookieSessionInterface.digest_method: Never
.SecureCookieSessionInterface.key_derivation: {"hmac"}
.SecureCookieSessionInterface.serializer: json.tag.TaggedJSONSerializer
.SecureCookieSessionInterface.session_class: {sessions.SecureCookieSession}
.SecureCookieSessionInterface.get_signing_serializer: (self: sessions.SecureCookieSessionInterface, app: app.Flask) -> NoneType or url_safe.URLSafeTimedSerializer
.SecureCookieSessionInterface.open_session: (self: sessions.SecureCookieSessionInterface, app: app.Flask, request: Obj) -> sessions.SecureCookieSession or NoneType
.SecureCookieSessionInterface.save_session: (self: sessions.SecureCookieSessionInterface, app: app.Flask, session: sessions.SessionMixin, response: Obj) -> NoneType

