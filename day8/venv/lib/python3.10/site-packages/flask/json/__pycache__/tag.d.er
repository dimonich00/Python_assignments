##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/flask/json/tag.py 1736025949 9281

.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.t = pyimport "<failure>"


.___v_desugar_2 = pyimport "<failure>"

.b64decode: Never
.___v_desugar_3 = pyimport "<failure>"

.b64encode: Never
.___v_desugar_4 = pyimport "<failure>"

.datetime: Never
.___v_desugar_5 = pyimport "<failure>"

.UUID: Never
.___v_desugar_6 = pyimport "__init__"
.__init__ = pyimport "__init__"
.Markup: {markupsafe.Markup}
.___v_desugar_7 = pyimport "http"
.http = pyimport "http"
.http_date: Never
.___v_desugar_8 = pyimport "http"

.parse_date: Never
.___v_desugar_9 = pyimport "<failure>"

.dumps: Never
.___v_desugar_10 = pyimport "<failure>"

.loads: Never
.JSONTag: ClassType
.JSONTag.serializer: Never
.JSONTag.__call__: (serializer: Obj) -> json.tag.JSONTag
.JSONTag.__slots__: global::Tuple([{"serializer"}])
.JSONTag.key: Str
.JSONTag.check: (self: json.tag.JSONTag, value: Obj) -> Bool
.JSONTag.to_json: (self: json.tag.JSONTag, value: Obj) -> Never
.JSONTag.to_python: (self: json.tag.JSONTag, value: Obj) -> Never
.JSONTag.tag: Never

.TagDict: ClassType
json = pyimport "json"
.TagDict <: json.tag.JSONTag
.TagDict.__slots__: global::Tuple([])
.TagDict.key: {" di"}
.TagDict.check: (self: json.tag.TagDict, value: Obj) -> Bool
.TagDict.to_json: (self: json.tag.TagDict, value: Obj) -> Never
.TagDict.to_python: (self: json.tag.TagDict, value: Obj) -> Never

.PassDict: ClassType
.PassDict <: json.tag.JSONTag
.PassDict.__slots__: global::Tuple([])
.PassDict.check: (self: json.tag.PassDict, value: Obj) -> Bool
.PassDict.to_json: (self: json.tag.PassDict, value: Obj) -> Never
.PassDict.tag: (self: json.tag.PassDict, value: Obj) -> Never

.TagTuple: ClassType
.TagTuple <: json.tag.JSONTag
.TagTuple.__slots__: global::Tuple([])
.TagTuple.key: {" t"}
.TagTuple.check: (self: json.tag.TagTuple, value: Obj) -> Bool
.TagTuple.to_json: (self: json.tag.TagTuple, value: Obj) -> Never
.TagTuple.to_python: (self: json.tag.TagTuple, value: Obj) -> Never

.PassList: ClassType
.PassList <: json.tag.JSONTag
.PassList.__slots__: global::Tuple([])
.PassList.check: (self: json.tag.PassList, value: Obj) -> Bool
.PassList.to_json: (self: json.tag.PassList, value: Obj) -> Never
.PassList.tag: (self: json.tag.PassList, value: Obj) -> Never

.TagBytes: ClassType
.TagBytes <: json.tag.JSONTag
.TagBytes.__slots__: global::Tuple([])
.TagBytes.key: {" b"}
.TagBytes.check: (self: json.tag.TagBytes, value: Obj) -> Bool
.TagBytes.to_json: (self: json.tag.TagBytes, value: Obj) -> Never
.TagBytes.to_python: (self: json.tag.TagBytes, value: Obj) -> Never

.TagMarkup: ClassType
.TagMarkup <: json.tag.JSONTag
.TagMarkup.__slots__: global::Tuple([])
.TagMarkup.key: {" m"}
.TagMarkup.check: (self: json.tag.TagMarkup, value: Obj) -> Bool
.TagMarkup.to_json: (self: json.tag.TagMarkup, value: Obj) -> Never
.TagMarkup.to_python: (self: json.tag.TagMarkup, value: Obj) -> Never

.TagUUID: ClassType
.TagUUID <: json.tag.JSONTag
.TagUUID.__slots__: global::Tuple([])
.TagUUID.key: {" u"}
.TagUUID.check: (self: json.tag.TagUUID, value: Obj) -> Bool
.TagUUID.to_json: (self: json.tag.TagUUID, value: Obj) -> Never
.TagUUID.to_python: (self: json.tag.TagUUID, value: Obj) -> Never

.TagDateTime: ClassType
.TagDateTime <: json.tag.JSONTag
.TagDateTime.__slots__: global::Tuple([])
.TagDateTime.key: {" d"}
.TagDateTime.check: (self: json.tag.TagDateTime, value: Obj) -> Bool
.TagDateTime.to_json: (self: json.tag.TagDateTime, value: Obj) -> Never
.TagDateTime.to_python: (self: json.tag.TagDateTime, value: Obj) -> Never

.TaggedJSONSerializer: ClassType
.TaggedJSONSerializer.order: global::List!(json.tag.JSONTag, _: Nat)
.TaggedJSONSerializer.tags: global::Dict!({Str: json.tag.JSONTag})
.TaggedJSONSerializer.__call__: () -> json.tag.TaggedJSONSerializer
.TaggedJSONSerializer.__slots__: global::Tuple([{"tags"}, {"order"}])
.TaggedJSONSerializer.default_tags: global::List!({json.tag.TagUUID, json.tag.TagDict, json.tag.TagBytes, json.tag.PassDict, json.tag.TagMarkup, json.tag.TagTuple, json.tag.PassList, json.tag.TagDateTime}, 8)
.TaggedJSONSerializer.register: (self: json.tag.TaggedJSONSerializer, tag_class: (json.tag.TaggedJSONSerializer) -> json.tag.JSONTag, force: Bool := {False} and Bool, index: NoneType or Int := {None} and NoneType or Int) -> NoneType
.TaggedJSONSerializer.tag: (self: json.tag.TaggedJSONSerializer, value: Obj) -> Never
.TaggedJSONSerializer.untag: Never
.TaggedJSONSerializer._untag_scan: (self: json.tag.TaggedJSONSerializer, value: Obj) -> Never
.TaggedJSONSerializer.dumps: (self: json.tag.TaggedJSONSerializer, value: Obj) -> Str
.TaggedJSONSerializer.loads: (self: json.tag.TaggedJSONSerializer, value: Str) -> Never

