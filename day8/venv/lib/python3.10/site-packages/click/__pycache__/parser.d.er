##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/click/parser.py 1736025949 19067

.t = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "<failure>"

.deque: Never
.___v_desugar_2 = pyimport "<failure>"

._: Never
.___v_desugar_3 = pyimport "<failure>"

.ngettext: Never
.___v_desugar_4 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.BadArgumentUsage: {exceptions.BadArgumentUsage}
.___v_desugar_5 = pyimport "exceptions"

.BadOptionUsage: {exceptions.BadOptionUsage}
.___v_desugar_6 = pyimport "exceptions"

.NoSuchOption: {exceptions.NoSuchOption}
.___v_desugar_7 = pyimport "exceptions"

.UsageError: {exceptions.UsageError}

.V: Never
._flag_needs_value: Obj
._unpack_args: (args: Obj, nargs_spec: Obj) -> global::Tuple([global::Tuple([Never]), global::List!(Never, _: Nat)])
.split_opt: (opt: Str) -> global::Tuple([Str, Str])
.normalize_opt: |Type_30024: Type, Type_29209 <: Structural({.token_normalize_func = ?30024 and (self: Obj, ?30118) -> ?30119}), Type_30119: Type, Type_30118: Type|(opt: Str, ctx: Type_29209) -> Str
.split_arg_string: (string: Str) -> global::List!(Never, 2)
.Option: ClassType

.Argument: ClassType

.ParsingState: ClassType
.ParsingState.largs: Never
.ParsingState.order: Never
.ParsingState.opts: Never
.ParsingState.rargs: Never
.ParsingState.__call__: (rargs: Obj) -> parser.ParsingState

.OptionParser: ClassType
.OptionParser.ctx: Never
.OptionParser._long_opt: Never
.OptionParser._short_opt: Never
.OptionParser.ignore_unknown_options: Bool
.OptionParser.allow_interspersed_args: Bool
.OptionParser._args: Never
.OptionParser._opt_prefixes: Never
.OptionParser.__call__: (ctx: Obj := Obj) -> parser.OptionParser
.OptionParser.add_option: (self: parser.OptionParser, obj: core.Option, opts: global::Iterable(Str), dest: Obj, action: Obj := Obj, nargs: Int := Int, const: Obj := Obj) -> NoneType
.OptionParser.add_argument: (self: parser.OptionParser, obj: core.Argument, dest: Obj, nargs: Int := Int) -> NoneType
.OptionParser.parse_args: (self: parser.OptionParser, args: Obj) -> global::Tuple([Never, Never, Never])
.OptionParser._process_args_for_args: (self: parser.OptionParser, state: parser.ParsingState) -> NoneType
.OptionParser._process_args_for_options: (self: parser.OptionParser, state: parser.ParsingState) -> NoneType
.OptionParser._match_long_opt: (self: parser.OptionParser, opt: Str, explicit_value: Obj, state: parser.ParsingState) -> NoneType
.OptionParser._match_short_opt: (self: parser.OptionParser, arg: Str, state: parser.ParsingState) -> NoneType
.OptionParser._get_value_from_state: (self: parser.OptionParser, option_name: Str, option: Obj, state: parser.ParsingState) -> Never
.OptionParser._process_opts: (self: parser.OptionParser, arg: Str, state: parser.ParsingState) -> NoneType

