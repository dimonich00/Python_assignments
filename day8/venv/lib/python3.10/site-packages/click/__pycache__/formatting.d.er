##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/click/formatting.py 1736025949 9706
.t = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "<failure>"

.contextmanager: Never
.___v_desugar_2 = pyimport "<failure>"

._: Never
.___v_desugar_3 = pyimport "_compat"
._compat = pyimport "_compat"
.term_len: (x: Str) -> Int
.___v_desugar_4 = pyimport "parser"
.parser = pyimport "parser"
.split_opt: Never
.FORCED_WIDTH: {None}
.measure_table: |T <: global::Iterable(?T), T: Type|(rows: global::Iterable(T)) -> global::Tuple([T])
.iter_rows: (rows: global::Iterable(Never), col_count: Int) -> NoneType
.wrap_text: (text: Str, width: Int := Int, initial_indent: Str := Str, subsequent_indent: Str := Str, preserve_paragraphs: Bool := Bool) -> Str
.HelpFormatter: ClassType
.HelpFormatter.width: Never
.HelpFormatter.indent_increment: Int
.HelpFormatter.buffer: Never
.HelpFormatter.current_indent: Never
.HelpFormatter.__call__: (indent_increment: Int := Int, width: Obj := Obj, max_width: Obj := Obj) -> formatting.HelpFormatter
.HelpFormatter.write: (self: formatting.HelpFormatter, string: Str) -> NoneType
.HelpFormatter.indent: (self: formatting.HelpFormatter) -> NoneType
.HelpFormatter.dedent: (self: formatting.HelpFormatter) -> NoneType
.HelpFormatter.write_usage: (self: formatting.HelpFormatter, prog: Str, args: Str := Str, prefix: Str := Str) -> NoneType
.HelpFormatter.write_heading: (self: formatting.HelpFormatter, heading: Str) -> NoneType
.HelpFormatter.write_paragraph: (self: formatting.HelpFormatter) -> NoneType
.HelpFormatter.write_text: (self: formatting.HelpFormatter, text: Str) -> NoneType
.HelpFormatter.write_dl: (self: formatting.HelpFormatter, rows: global::Iterable(global::Iterable(Int)), col_max: Int := Int, col_spacing: Int := Int) -> NoneType
.HelpFormatter.section: (self: formatting.HelpFormatter, name: Str) -> Never
.HelpFormatter.indentation: (self: formatting.HelpFormatter) -> Never
.HelpFormatter.getvalue: (self: formatting.HelpFormatter) -> Str

.join_options: (options: global::Iterable(Never)) -> global::Tuple([Str, Bool])
