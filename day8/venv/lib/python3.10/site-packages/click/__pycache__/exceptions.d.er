##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/click/exceptions.py 1736025949 9600
.t = pyimport "<failure>"
.<failure> = pyimport "<failure>"

.___v_desugar_1 = pyimport "<failure>"

._: Never
.___v_desugar_2 = pyimport "<failure>"

.ngettext: Never
.___v_desugar_3 = pyimport "_compat"
._compat = pyimport "_compat"
.get_text_stderr: |Type_2396 :> {None}|(encoding: Type_2396 := Type_2396, errors: Type_2396 := Type_2396) -> Never
.___v_desugar_4 = pyimport "globals"
.globals = pyimport "globals"
.resolve_color_default: (color: Obj := Obj) -> {None}
.___v_desugar_5 = pyimport "utils"
.utils = pyimport "utils"
.echo: (message: Never := Never, file: global::Writable! := global::Writable!, nl: Bool := Bool, err: Bool := Bool, color: {None} := {None}) -> NoneType
.___v_desugar_6 = pyimport "utils"

.format_filename: (filename: Obj, shorten: Bool := Bool and Bool) -> Str

._join_param_hints: |Type_23416: Type|(param_hint: Type_23416) -> Type_23416
.ClickException: ClassType
.ClickException <: global::Exception
.ClickException.message: Str
.ClickException.show_color: Never
.ClickException.__call__: (message: Str) -> exceptions.ClickException
.ClickException.exit_code: {1}
.ClickException.format_message: (self: exceptions.ClickException) -> Str
.ClickException.__str__: (self: exceptions.ClickException) -> Str
.ClickException.show: (self: exceptions.ClickException, file: global::Writable! := global::Writable!) -> NoneType

.UsageError: ClassType
exceptions = pyimport "exceptions"
.UsageError <: .ClickException
.UsageError.ctx: Never
.UsageError.cmd: Never
.UsageError.__call__: (message: Str, ctx: Obj := Obj) -> exceptions.UsageError
.UsageError.exit_code: {2}
.UsageError.show: (self: exceptions.UsageError, file: global::Writable! := global::Writable!) -> NoneType

.BadParameter: ClassType
.BadParameter <: .UsageError
.BadParameter.param: Never
.BadParameter.param_hint: Never
.BadParameter.__call__: (message: Str, ctx: Obj := Obj, param: Obj := Obj, param_hint: Obj := Obj) -> exceptions.BadParameter
.BadParameter.format_message: (self: exceptions.BadParameter) -> Str

.MissingParameter: ClassType
.MissingParameter <: .BadParameter
.MissingParameter.param_type: Never
.MissingParameter.__call__: (message: Obj := Obj, ctx: Obj := Obj, param: Obj := Obj, param_hint: Obj := Obj, param_type: Obj := Obj) -> exceptions.MissingParameter
.MissingParameter.format_message: (self: exceptions.MissingParameter) -> Str
.MissingParameter.__str__: (self: exceptions.MissingParameter) -> Str

.NoSuchOption: ClassType
.NoSuchOption <: .UsageError
.NoSuchOption.option_name: Str
.NoSuchOption.possibilities: Never
.NoSuchOption.__call__: (option_name: Str, message: Obj := Obj, possibilities: Obj := Obj, ctx: Obj := Obj) -> exceptions.NoSuchOption
.NoSuchOption.format_message: (self: exceptions.NoSuchOption) -> Str

.BadOptionUsage: ClassType
.BadOptionUsage <: .UsageError
.BadOptionUsage.option_name: Str
.BadOptionUsage.__call__: (option_name: Str, message: Str, ctx: Obj := Obj) -> exceptions.BadOptionUsage

.BadArgumentUsage: ClassType
.BadArgumentUsage <: .UsageError

.FileError: ClassType
.FileError <: .ClickException
.FileError.filename: Str
.FileError.ui_filename: Str
.FileError.__call__: (filename: Str, hint: Obj := Obj) -> exceptions.FileError
.FileError.format_message: (self: exceptions.FileError) -> Str

.Abort: ClassType
.Abort <: global::RuntimeError

.Exit: ClassType
.Exit <: global::RuntimeError
.Exit.exit_code: Int
.Exit.__call__: (code: Int := Int) -> exceptions.Exit
.Exit.__slots__: global::Tuple([{"exit_code"}])

