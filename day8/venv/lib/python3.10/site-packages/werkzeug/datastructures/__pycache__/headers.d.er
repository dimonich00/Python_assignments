##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/werkzeug/datastructures/headers.py 1736025949 21554
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.cabc = pyimport "<failure>"


.re = pyimport "<failure>"


.t = pyimport "<failure>"


.___v_desugar_2 = pyimport "<failure>"

._missing: Never
.___v_desugar_3 = pyimport "<failure>"

.BadRequestKeyError: Never
.___v_desugar_4 = pyimport "mixins"
.mixins = pyimport "mixins"
.ImmutableHeadersMixin: {mixins.ImmutableHeadersMixin}
.___v_desugar_5 = pyimport "structures"
.structures = pyimport "structures"
.iter_multi_items: (mapping: global::GenericDict) -> NoneType
.___v_desugar_6 = pyimport "structures"

.MultiDict: {structures.MultiDict}

.T: Never
.Headers: ClassType
.Headers._list: global::List!(Never, _: Nat)
.Headers.__call__: (defaults: NoneType or headers.Headers := NoneType or headers.Headers) -> headers.Headers
.Headers.__getitem__: (self: headers.Headers, key: Str) -> Str
.Headers._get_key: (self: headers.Headers, key: Str) -> Str
.Headers.__eq__: (self: headers.Headers, other: Obj) -> Bool
.Headers.__hash__: Never
.Headers.get: (self: headers.Headers, key: Str) -> NoneType or Str
.Headers.get: (self: headers.Headers, key: Str, default: Str) -> Str
.Headers.get: (self: headers.Headers, key: Str, default: Obj) -> Str
.Headers.get: (self: headers.Headers, key: Str, Type: Obj) -> Never
.Headers.get: (self: headers.Headers, key: Str, default: Obj, Type: Obj) -> Never
.Headers.get: (self: headers.Headers, key: Str, default: NoneType or Str := NoneType or Str, Type: Obj := Obj) -> NoneType or Str
.Headers.getlist: (self: headers.Headers, key: Str) -> global::List!(Str, _: Nat)
.Headers.getlist: Never
.Headers.getlist: Never
.Headers.get_all: (self: headers.Headers, name: Str) -> global::List!(Str, _: Nat)
.Headers.items: (self: Never, lower: Bool := Bool) -> NoneType
.Headers.keys: (self: Never, lower: Bool := Bool) -> NoneType
.Headers.values: (self: Never) -> NoneType
.Headers.extend: (self: headers.Headers, arg: Obj := Obj, **kwargs := Str) -> NoneType
.Headers.__delitem__: (self: headers.Headers, key: Obj) -> NoneType
.Headers._del_key: (self: headers.Headers, key: Str) -> NoneType
.Headers.remove: (self: headers.Headers, key: Str) -> NoneType
.Headers.pop: (self: headers.Headers) -> global::Tuple([Str, Str])
.Headers.pop: (self: headers.Headers, key: Str) -> Str
.Headers.pop: (self: headers.Headers, key: NoneType or Int := NoneType or Int) -> global::Tuple([Str, Str])
.Headers.pop: (self: headers.Headers, key: Str, default: Str) -> Str
.Headers.pop: (self: headers.Headers, key: Str, default: Obj) -> Str
.Headers.pop: (self: headers.Headers, key: NoneType or Int or Str := NoneType or Int or Str, default: Str := Str) -> global::Tuple([Str, Str]) or Str
.Headers.popitem: (self: headers.Headers) -> global::Tuple([Str, Str])
.Headers.__contains__: (self: headers.Headers, key: Str) -> Bool
.Headers.__iter__: (self: headers.Headers) -> global::ListIterator(Never)
.Headers.__len__: (self: headers.Headers) -> Int
.Headers.add: (self: headers.Headers, key: Str, value: Obj, **kwargs := Obj) -> NoneType
.Headers.add_header: (self: headers.Headers, key: Str, value: Obj, **kwargs := Obj) -> NoneType
.Headers.clear: (self: headers.Headers) -> NoneType
.Headers.GenericSet: (self: headers.Headers, key: Str, value: Obj, **kwargs := Obj) -> NoneType
.Headers.setlist: (self: headers.Headers, key: Str, values: Bool) -> NoneType
.Headers.setdefault: (self: headers.Headers, key: Str, default: Obj) -> Str
.Headers.setlistdefault: (self: headers.Headers, key: Str, default: Bool) -> global::List!(Str, _: Nat)
.Headers.__setitem__: (self: headers.Headers, key: Str, value: Obj) -> NoneType
.Headers.update: (self: headers.Headers, arg: NoneType or headers.Headers := NoneType or headers.Headers, **kwargs := Obj) -> NoneType
.Headers.__or__: (self: headers.Headers, other: Obj) -> Never
.Headers.__ior__: (self: headers.Headers, other: Never) -> Never
.Headers.to_wsgi_list: (self: headers.Headers) -> global::List!(global::Tuple([Str, Str]), _: Nat)
.Headers.copy: (self: headers.Headers) -> Never
.Headers.__copy__: (self: headers.Headers) -> Never
.Headers.__str__: (self: headers.Headers) -> Str
.Headers.__repr__: (self: headers.Headers) -> Str

._options_header_vkw: Never
._newline_re: Never
._str_header_value: (value: Obj) -> Str
.EnvironHeaders: ClassType
.EnvironHeaders <: mixins.ImmutableHeadersMixin
.EnvironHeaders.environ: Never
.EnvironHeaders.__call__: (environ: Obj) -> headers.EnvironHeaders
.EnvironHeaders.__eq__: (self: headers.EnvironHeaders, other: Obj) -> Bool
.EnvironHeaders.__hash__: Never
.EnvironHeaders.__getitem__: (self: headers.EnvironHeaders, key: Str) -> Str
.EnvironHeaders._get_key: (self: headers.EnvironHeaders, key: Str) -> Str
.EnvironHeaders.__len__: (self: headers.EnvironHeaders) -> Int
.EnvironHeaders.__iter__: (self: headers.EnvironHeaders) -> NoneType
.EnvironHeaders.copy: (self: headers.EnvironHeaders) -> Never
.EnvironHeaders.__or__: (self: headers.EnvironHeaders, other: Obj) -> Never

.___v_desugar_8 = pyimport "__init__"
.__init__ = pyimport "__init__"
.http: Never
