##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/werkzeug/routing/exceptions.py 1736025949 4846
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.difflib = pyimport "<failure>"


.t = pyimport "<failure>"


.___v_desugar_2 = pyimport "exceptions"
.exceptions = pyimport "exceptions"
.BadRequest: Never
.___v_desugar_3 = pyimport "exceptions"

.HTTPException: Never
.___v_desugar_4 = pyimport "<failure>"

.cached_property: Never
.___v_desugar_5 = pyimport "<failure>"

.redirect: Never

.RoutingException: ClassType
.RoutingException <: global::Exception

.RequestRedirect: ClassType
.RequestRedirect <: Never
.RequestRedirect.new_url: Str
.RequestRedirect.__call__: (new_url: Str) -> exceptions.RequestRedirect
.RequestRedirect.code: {308}
.RequestRedirect.get_response: Never

.RequestPath: ClassType
.RequestPath <: .RoutingException
.RequestPath.path_info: Str
.RequestPath.__call__: (path_info: Str) -> exceptions.RequestPath
.RequestPath.__slots__: global::Tuple([{"path_info"}])

.RequestAliasRedirect: ClassType
.RequestAliasRedirect <: .RoutingException
.RequestAliasRedirect.endpoint: Never
.RequestAliasRedirect.matched_values: Never
.RequestAliasRedirect.__call__: (matched_values: Obj, endpoint: Obj) -> exceptions.RequestAliasRedirect

.BuildError: ClassType
.BuildError <: .RoutingException
.BuildError.values: Never
.BuildError.adapter: NoneType or map.MapAdapter
.BuildError.method: NoneType or Str
.BuildError.endpoint: Never
.BuildError.__call__: (endpoint: Obj, values: Obj, method: NoneType or Str, adapter: NoneType or map.MapAdapter := NoneType or map.MapAdapter) -> exceptions.BuildError
.BuildError.suggested: (self: exceptions.BuildError) -> Never
.BuildError.closest_rule: (self: exceptions.BuildError, adapter: NoneType or map.MapAdapter) -> Never
.BuildError.__str__: (self: exceptions.BuildError) -> Str

.WebsocketMismatch: ClassType
.WebsocketMismatch <: Never

.NoMatch: ClassType
.NoMatch <: global::Exception
.NoMatch.websocket_mismatch: Bool
.NoMatch.have_match_for: Never
.NoMatch.__call__: (have_match_for: Obj, websocket_mismatch: Bool) -> exceptions.NoMatch
.NoMatch.__slots__: global::Tuple([{"have_match_for"}, {"websocket_mismatch"}])

