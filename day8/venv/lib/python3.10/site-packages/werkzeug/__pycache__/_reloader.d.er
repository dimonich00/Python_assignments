##[pylyzer] failed /home/dmitry/progs/python/WISCourse/Python_assignments/day8/venv/lib/python3.10/site-packages/werkzeug/_reloader.py 1736025949 15429
.___v_desugar_1 = pyimport "<failure>"
.<failure> = pyimport "<failure>"
.annotations: Never
.fnmatch = pyimport "<failure>"


.os = pyimport "<failure>"


.subprocess = pyimport "<failure>"


.sys = pyimport "<failure>"


.threading = pyimport "<failure>"


.time = pyimport "<failure>"


.t = pyimport "<failure>"


.___v_desugar_2 = pyimport "<failure>"

.chain: Never
.___v_desugar_3 = pyimport "<failure>"

.PurePath: Never
.___v_desugar_4 = pyimport "_internal"
._internal = pyimport "_internal"
._log: (Type: Str, message: Str, *args: Obj, **kwargs := Obj) -> NoneType
._ignore_always: Never
.prefix: Never

._stat_ignore_scan: global::Tuple([Never])

._ignore_common_dirs: global::Set({"__pycache__", ".nox", ".hg", ".git", ".tox", ".pytest_cache", ".mypy_cache"}, 7)
._iter_module_paths: () -> NoneType
._remove_by_pattern: (paths: Obj, exclude_patterns: global::Iterable(Never)) -> NoneType
._find_stat_paths: (extra_files: Obj, exclude_patterns: global::Iterable(Never)) -> Never
._find_watchdog_paths: (extra_files: Obj, exclude_patterns: global::Iterable(Never)) -> Never
._find_common_roots: (paths: Obj) -> Never
._get_args_for_reloading: () -> global::List!(Str, _: Nat)
.ReloaderLoop: ClassType
.ReloaderLoop.exclude_patterns: Never
.ReloaderLoop.interval: Float
.ReloaderLoop.extra_files: Never
.ReloaderLoop.__call__: (extra_files: Obj := Obj, exclude_patterns: Obj := Obj, interval: Float := Float) -> _reloader.ReloaderLoop
.ReloaderLoop.name: {""}
.ReloaderLoop.__enter__: (self: _reloader.ReloaderLoop) -> _reloader.ReloaderLoop
.ReloaderLoop.__exit__: (self: _reloader.ReloaderLoop, exc_type: Obj, exc_val: Obj, exc_tb: Obj) -> NoneType
.ReloaderLoop.run: (self: _reloader.ReloaderLoop) -> NoneType
.ReloaderLoop.run_step: (self: _reloader.ReloaderLoop) -> NoneType
.ReloaderLoop.restart_with_reloader: (self: _reloader.ReloaderLoop) -> Int
.ReloaderLoop.trigger_reload: (self: _reloader.ReloaderLoop, filename: Str) -> NoneType
.ReloaderLoop.log_reload: (self: _reloader.ReloaderLoop, filename: global::Bytes or Str) -> NoneType

.StatReloaderLoop: ClassType
_reloader = pyimport "_reloader"
.StatReloaderLoop <: .ReloaderLoop
.StatReloaderLoop.name: {"stat"}
.StatReloaderLoop.__enter__: (self: _reloader.StatReloaderLoop) -> _reloader.ReloaderLoop
.StatReloaderLoop.run_step: (self: _reloader.StatReloaderLoop) -> NoneType

.WatchdogReloaderLoop: ClassType
.WatchdogReloaderLoop <: .ReloaderLoop
.WatchdogReloaderLoop.observer: Never
.WatchdogReloaderLoop.name: Never
.WatchdogReloaderLoop.event_handler: Never
.WatchdogReloaderLoop.should_reload: Never
.WatchdogReloaderLoop.__call__: (*args: Obj, **kwargs := Obj) -> _reloader.WatchdogReloaderLoop
.WatchdogReloaderLoop.trigger_reload: (self: _reloader.WatchdogReloaderLoop, filename: global::Bytes or Str) -> NoneType
.WatchdogReloaderLoop.__enter__: (self: _reloader.WatchdogReloaderLoop) -> _reloader.ReloaderLoop
.WatchdogReloaderLoop.__exit__: (self: _reloader.WatchdogReloaderLoop, exc_type: Obj, exc_val: Obj, exc_tb: Obj) -> NoneType
.WatchdogReloaderLoop.run: (self: _reloader.WatchdogReloaderLoop) -> NoneType
.WatchdogReloaderLoop.run_step: (self: _reloader.WatchdogReloaderLoop) -> NoneType

.reloader_loops: Never




.ensure_echo_on: () -> NoneType
.run_with_reloader: (main_func: Obj, extra_files: Obj := Obj, exclude_patterns: Obj := Obj, interval: Float := Float, reloader_type: Str := Str) -> NoneType
